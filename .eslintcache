[{"C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\index.js":"1","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\reportWebVitals.js":"2","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\App.js":"3","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\layout\\Layout.js":"4","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\components\\navBar\\NavBar.js":"5","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\components\\navBar\\NavBarLogo.js":"6","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\shared\\StyledLink.js":"7","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\data\\firebase.js":"8","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\theme\\theme.js":"9","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\FlowerBeds\\index.js":"10","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\SelectVegetables\\index.js":"11","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\FlowerBedForm\\index.js":"12","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\Home\\index.js":"13","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\FlowerBeds\\FlowerBeds.js":"14","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\SelectVegetables\\Vegetables.js":"15","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\FlowerBedForm\\FlowerBedForm.js":"16","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\Home\\Home.js":"17","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\shared\\StyledModalCloseButton.js":"18","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\FlowerBeds\\ExistingFlowerBeds.js":"19","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\shared\\ReturnButton.js":"20","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\FlowerBeds\\CreateFlowerBed.js":"21","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\SelectVegetables\\VegetableSelector.js":"22","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\SelectVegetables\\SelectedVegetables.js":"23","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\SelectVegetables\\RecommendedVegetables.js":"24","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\contexts\\AuthContexts.js":"25","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\UserProfile\\index.js":"26","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\UserProfile\\UserProfile.js":"27","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\Home\\LoginReminder.js":"28","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\routes\\PrivateRoute.js":"29","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\components\\navBar\\buttons\\SigninButton.js":"30","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\components\\navBar\\buttons\\SignupButton.js":"31","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\components\\navBar\\buttons\\SignoutButton.js":"32","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\components\\navBar\\buttons\\UserProfileButton.js":"33"},{"size":494,"mtime":1612908363746,"results":"34","hashOfConfig":"35"},{"size":375,"mtime":1612903922348,"results":"36","hashOfConfig":"35"},{"size":1335,"mtime":1614080454984,"results":"37","hashOfConfig":"35"},{"size":269,"mtime":1614286598057,"results":"38","hashOfConfig":"35"},{"size":1430,"mtime":1614287819824,"results":"39","hashOfConfig":"35"},{"size":262,"mtime":1614287794187,"results":"40","hashOfConfig":"35"},{"size":329,"mtime":1613742268448,"results":"41","hashOfConfig":"35"},{"size":875,"mtime":1614080020311,"results":"42","hashOfConfig":"35"},{"size":450,"mtime":1614294743325,"results":"43","hashOfConfig":"35"},{"size":64,"mtime":1613742268443,"results":"44","hashOfConfig":"35"},{"size":65,"mtime":1613742268447,"results":"45","hashOfConfig":"35"},{"size":73,"mtime":1613742268441,"results":"46","hashOfConfig":"35"},{"size":48,"mtime":1613742268444,"results":"47","hashOfConfig":"35"},{"size":614,"mtime":1613742268462,"results":"48","hashOfConfig":"35"},{"size":271,"mtime":1613742268447,"results":"49","hashOfConfig":"35"},{"size":3957,"mtime":1613940900964,"results":"50","hashOfConfig":"35"},{"size":1605,"mtime":1614287847007,"results":"51","hashOfConfig":"35"},{"size":258,"mtime":1613742268449,"results":"52","hashOfConfig":"35"},{"size":746,"mtime":1613742268463,"results":"53","hashOfConfig":"35"},{"size":554,"mtime":1613742268448,"results":"54","hashOfConfig":"35"},{"size":422,"mtime":1613742268465,"results":"55","hashOfConfig":"35"},{"size":3577,"mtime":1614105240130,"results":"56","hashOfConfig":"35"},{"size":1677,"mtime":1613742268446,"results":"57","hashOfConfig":"35"},{"size":2477,"mtime":1614017243437,"results":"58","hashOfConfig":"35"},{"size":1035,"mtime":1614013931148,"results":"59","hashOfConfig":"35"},{"size":68,"mtime":1613998380129,"results":"60","hashOfConfig":"35"},{"size":801,"mtime":1614084024590,"results":"61","hashOfConfig":"35"},{"size":2476,"mtime":1614098698791,"results":"62","hashOfConfig":"35"},{"size":405,"mtime":1614014017426,"results":"63","hashOfConfig":"35"},{"size":3658,"mtime":1614287520284,"results":"64","hashOfConfig":"35"},{"size":4451,"mtime":1614098718703,"results":"65","hashOfConfig":"35"},{"size":708,"mtime":1614087035921,"results":"66","hashOfConfig":"35"},{"size":607,"mtime":1614087037687,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"sq2clo",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"70"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"70"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"70"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"70"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"70"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"70"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"70"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\index.js",[],["144","145"],"C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\reportWebVitals.js",[],"C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\App.js",["146"],"import React from \"react\";\r\nimport Home from \"./pages/Home\";\r\nimport Layout from \"./layout/Layout\";\r\nimport NavBar from \"./components/navBar/NavBar\";\r\nimport UserProfile from './pages/UserProfile'\r\nimport FlowerBeds from \"./pages/FlowerBeds\";\r\nimport FlowerBedForm from \"./pages/FlowerBedForm\";\r\nimport Vegetables from \"./pages/SelectVegetables\";\r\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\r\nimport AuthProvider from \"./contexts/AuthContexts\";\r\nimport ThemeProvider from '@material-ui/styles/ThemeProvider';\r\nimport theme from './theme/theme'\r\n\r\nexport default function App() {\r\n  return (\r\n    <AuthProvider>\r\n      <ThemeProvider theme={theme}>\r\n        <Router>\r\n          <Layout>\r\n            <Routes>\r\n              <Route path=\"/\" element={<Home />} />\r\n              <Route path=\"/profile/:slug\" element={<UserProfile />} />\r\n              <Route path=\"/flower-beds\">\r\n                <Route path=\"/overview\" element={<FlowerBeds />} />\r\n                <Route path=\"/create\">\r\n                  <Route path=\"/form\" element={<FlowerBedForm />} />\r\n                  <Route path=\"/select-vegetables\" element={<Vegetables />} />\r\n                </Route>\r\n              </Route>\r\n            </Routes>\r\n          </Layout>\r\n        </Router>\r\n      </ThemeProvider>\r\n    </AuthProvider>\r\n  );\r\n}\r\n","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\layout\\Layout.js",[],"C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\components\\navBar\\NavBar.js",[],"C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\components\\navBar\\NavBarLogo.js",[],"C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\shared\\StyledLink.js",["147"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledLink = styled(Link)`\r\n  text-decoration: none;\r\n  &:focus,\r\n  &:hover,\r\n  &:visited,\r\n  &:link,\r\n  &:active {\r\n    text-decoration: none;\r\n  }\r\n`;\r\n\r\nexport default (props) => <StyledLink {...props} />;\r\n","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\data\\firebase.js",[],"C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\theme\\theme.js",[],"C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\FlowerBeds\\index.js",[],"C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\SelectVegetables\\index.js",[],"C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\FlowerBedForm\\index.js",[],"C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\Home\\index.js",[],"C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\FlowerBeds\\FlowerBeds.js",[],"C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\SelectVegetables\\Vegetables.js",[],"C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\FlowerBedForm\\FlowerBedForm.js",[],"C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\Home\\Home.js",[],"C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\shared\\StyledModalCloseButton.js",["148"],"import styled from 'styled-components'\r\nimport IconButton from '@material-ui/core/IconButton'\r\n\r\nconst StyledCloseButton = styled(IconButton)`\r\n    position:absolute;\r\n    right:0;\r\n    top:0;\r\n`\r\n\r\nexport default (props) => <StyledCloseButton {...props} />;","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\FlowerBeds\\ExistingFlowerBeds.js",[],"C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\shared\\ReturnButton.js",[],"C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\FlowerBeds\\CreateFlowerBed.js",[],"C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\SelectVegetables\\VegetableSelector.js",["149","150"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport GridList from \"@material-ui/core/GridList\";\r\nimport GridListTile from \"@material-ui/core/GridListTile\";\r\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport SelectedVegetables from \"./SelectedVegetables\";\r\nimport RecommendedVegetables from './RecommendedVegetables'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { firestore } from \"../../data/firebase\";\r\nimport styled from 'styled-components'\r\n\r\nconst StyledContainer = styled.div`\r\n    display: flex;\r\n    justify-content: space-around;\r\n    overflow: hidden;\r\n`\r\nconst useStyles = makeStyles(() => ({\r\n  gridList: {\r\n    width: 1000,\r\n    height: 600,\r\n  },\r\n  icon: {\r\n    color: \"rgba(255, 255, 255, 0.54)\",\r\n  },\r\n}));\r\n\r\nexport default function VegetableSelector() {\r\n  const classes = useStyles();\r\n  const [items, setItems] = useState([]);\r\n  const [selectedItems, setSelectedItems] = useState([]);\r\n  const [recommendedItems, setRecommendedItems] = useState([]);\r\n\r\n  useEffect(\r\n    function loadData() {\r\n      const fetchData = async () => {\r\n        const vegetables = await firestore.collection(\"Vegetables\").get();\r\n        const tmp = [];\r\n        vegetables.docs.map(async (doc) => {\r\n          tmp.push({ id: doc.id, ...doc.data() });\r\n        });\r\n        tmp.sort((a, b) => a.name > b.name ? 1 : -1)\r\n        setItems(tmp);\r\n      };\r\n      fetchData();\r\n    }, []);\r\n\r\n\r\n  useEffect(\r\n    function updateRecommendation() {\r\n      var matchedItems = [];\r\n      var allItems = []\r\n      selectedItems.forEach(item => item.likesArray.forEach(it => {\r\n        for (let i = 0; i < items.length; i++) {\r\n          if (it === items[i].id) {\r\n            matchedItems.push(items[i]);\r\n          }\r\n        }\r\n        ///TODO ITEMS PROPER MAPPING\r\n      }))\r\n      setRecommendedItems([...matchedItems])\r\n\r\n    }, [selectedItems]);\r\n\r\n  function findItem(item) {\r\n    return selectedItems.some(el => el.id === item.id)\r\n  }\r\n\r\n  function handleClick(item) {\r\n    const founded = findItem(item);\r\n    if (!founded) {\r\n      setSelectedItems((selectedItems) => [...selectedItems, item]);\r\n    }\r\n  }\r\n\r\n  function deleteSelectedItem(id) {\r\n    setSelectedItems((selectedData) =>\r\n      selectedData.filter((item) => item.id !== id)\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h4\" align=\"center\">\r\n        Wybierz warzywa do zasadzenia\r\n        </Typography>\r\n      <StyledContainer>\r\n        <GridList className={classes.gridList} cellHeight={400}>\r\n          {items.map((item) => (\r\n            <GridListTile key={item.image} cols={0.4} rows={0.5}>\r\n              <img src={item.image} alt={item.id} />\r\n              <GridListTileBar\r\n                title={item.name}\r\n                actionIcon={\r\n                  <IconButton\r\n                    className={classes.icon}\r\n                    onClick={() => handleClick(item)}\r\n                  >\r\n                    <AddIcon />\r\n                  </IconButton>\r\n                }\r\n              />\r\n            </GridListTile>\r\n          ))}\r\n        </GridList>\r\n        {selectedItems && (\r\n          <SelectedVegetables\r\n            selectedItems={selectedItems}\r\n            deleteSelectedItem={deleteSelectedItem}\r\n          />\r\n        )}\r\n        <RecommendedVegetables recommendedItems={recommendedItems} addItem={handleClick} />\r\n      </StyledContainer>\r\n    </>\r\n  );\r\n}","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\SelectVegetables\\SelectedVegetables.js",[],["151","152"],"C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\SelectVegetables\\RecommendedVegetables.js",[],"C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\contexts\\AuthContexts.js",[],"C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\UserProfile\\index.js",[],"C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\UserProfile\\UserProfile.js",["153","154","155","156","157"],"import { Container, CssBaseline, Grid, Paper, TextField, Typography } from '@material-ui/core'\r\nimport { useAuth } from '../../contexts/AuthContexts'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n}));\r\n\r\n\r\n\r\nexport default function UserProfile() {\r\n    const classes = useStyles();\r\n    const { currentUser } = useAuth()\r\n\r\n    return (\r\n        <>\r\n            <CssBaseline />\r\n            <Container maxWidth=\"sm\">\r\n                <Typography component=\"div\" style={{ backgroundColor: '#cfe8fc', height: '80vh' }} />\r\n            </Container>\r\n        </>\r\n    )\r\n}","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\Home\\LoginReminder.js",[],"C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\routes\\PrivateRoute.js",[],["158","159"],"C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\components\\navBar\\buttons\\SigninButton.js",["160","161"],"import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport StyledCloseButton from '../../../shared/StyledModalCloseButton'\r\nimport CloseIcon from '@material-ui/icons/CloseSharp'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport { useAuth } from '../../../contexts/AuthContexts'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: \"absolute\",\r\n    top: 110,\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  signinButton: {\r\n    marginRight: theme.spacing(1),\r\n    '&:hover': {\r\n      backgroundColor: \"white\",\r\n      boxShadow: `5px -5px ${theme.primary.darkGreen}`\r\n    }\r\n  }\r\n}));\r\n\r\nexport default function SignInButton() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n  const [email, setEmail] = useState()\r\n  const [password, setPassword] = useState()\r\n  const { signIn } = useAuth();\r\n  const [error, setError] = useState()\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  function handleEmailChange(value) {\r\n    setEmail(value)\r\n  }\r\n\r\n  function handlePasswordChange(value) {\r\n    setPassword(value)\r\n  }\r\n\r\n  function handleSignIn() {\r\n    try {\r\n      setError(\"\")\r\n      signIn(email, password)\r\n    }\r\n    catch {\r\n      setError(\"Nie udało się stworzyć konta\")\r\n    }\r\n  }\r\n\r\n  const body = (\r\n    <Modal\r\n      open={open}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"sign-in-modal\"\r\n      aria-describedby=\"sign-in-modal\"\r\n    >\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <div className={classes.paper}>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Logowanie\r\n          </Typography>\r\n          <StyledCloseButton onClick={handleClose}>\r\n            <CloseIcon />\r\n          </StyledCloseButton>\r\n          <FormControl fullWidth required>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              id=\"email\"\r\n              label=\"Adres email\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              value={email}\r\n              onChange={(e) => handleEmailChange(e.target.value)}\r\n              autoFocus\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              name=\"password\"\r\n              label=\"Hasło\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              value={password}\r\n              onChange={(e) => handlePasswordChange(e.target.value)}\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onClick={() => handleSignIn()}\r\n            >\r\n              Zaloguj się\r\n            </Button>\r\n          </FormControl>\r\n        </div>\r\n      </Container>\r\n    </Modal>\r\n  );\r\n  return (\r\n    <>\r\n      <Button onClick={handleOpen} variant=\"outlined\" className={classes.signinButton}>\r\n        Zaloguj się\r\n      </Button>\r\n      {body}\r\n    </>\r\n  );\r\n}\r\n\r\n","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\components\\navBar\\buttons\\SignupButton.js",["162"],"import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport StyledCloseButton from '../../../shared/StyledModalCloseButton'\r\nimport CloseIcon from '@material-ui/icons/CloseSharp'\r\nimport { useAuth } from '../../../contexts/AuthContexts'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: \"absolute\",\r\n    top: 110,\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  signupButton: {\r\n    '&:hover': {\r\n      backgroundColor: \"white\",\r\n      boxShadow: `5px -5px ${theme.primary.darkGreen}`\r\n    }\r\n  }\r\n\r\n}));\r\n\r\nexport default function SignUpButton() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n  const [email, setEmail] = useState()\r\n  const [password, setPassword] = useState()\r\n  const [passwordConfirm, setPasswordConfirm] = useState()\r\n  const { signUp, currentUser } = useAuth();\r\n  const [error, setError] = useState(\"\")\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  function handleEmailChange(value) {\r\n    setEmail(value)\r\n  }\r\n\r\n  function handlePasswordChange(value) {\r\n    setPassword(value)\r\n  }\r\n\r\n  function handlePasswordConfirmChange(value) {\r\n    setPasswordConfirm(value)\r\n  }\r\n\r\n  function handleSignUp() {\r\n    if (password !== passwordConfirm) {\r\n      setError(\"Hasła nie są jednakowe!\")\r\n    }\r\n    console.log(currentUser)\r\n    try {\r\n      setError(\"\")\r\n      signUp(email, password)\r\n    }\r\n    catch {\r\n      setError(\"Nie udało się stworzyć konta\")\r\n    }\r\n  }\r\n\r\n  const body = (\r\n    <Modal\r\n      open={open}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"sign-up-modal\"\r\n      aria-describedby=\"sign-up-modal\"\r\n    >\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Rejestracja\r\n          </Typography>\r\n          <StyledCloseButton onClick={handleClose}>\r\n            <CloseIcon />\r\n          </StyledCloseButton>\r\n          <FormControl fullWidth required>\r\n            {currentUser && currentUser.email}\r\n            <TextField\r\n              required\r\n              variant=\"outlined\"\r\n              id=\"email\"\r\n              label=\"Adres email\"\r\n              name=\"email\"\r\n              margin=\"normal\"\r\n              autoComplete=\"email\"\r\n              value={email}\r\n              onChange={(e) => handleEmailChange(e.target.value)}\r\n            />\r\n            <TextField\r\n              required\r\n              variant=\"outlined\"\r\n              name=\"password\"\r\n              label=\"Hasło\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              margin=\"normal\"\r\n              autoComplete=\"current-password\"\r\n              value={password}\r\n              onChange={(e) => handlePasswordChange(e.target.value)}\r\n            />\r\n            <TextField\r\n              required\r\n              variant=\"outlined\"\r\n              name=\"password-confirm\"\r\n              label=\"Powtórz hasło\"\r\n              type=\"password\"\r\n              id=\"password-confirm\"\r\n              margin=\"normal\"\r\n              autoComplete=\"current-password\"\r\n              value={passwordConfirm}\r\n              onChange={(e) => handlePasswordConfirmChange(e.target.value)}\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onClick={(e) => handleSignUp(e)}\r\n            >\r\n              Załóż konto\r\n            </Button>\r\n          </FormControl>\r\n        </div>\r\n      </Container>\r\n    </Modal>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Button onClick={handleOpen} variant=\"outlined\" className={classes.signupButton}>\r\n        Załóż konto\r\n      </Button>\r\n      {body}\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\components\\navBar\\buttons\\SignoutButton.js",[],"C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\components\\navBar\\buttons\\UserProfileButton.js",[],{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","severity":1,"message":"168","line":4,"column":8,"nodeType":"169","messageId":"170","endLine":4,"endColumn":14},{"ruleId":"171","severity":1,"message":"172","line":16,"column":1,"nodeType":"173","endLine":16,"endColumn":53},{"ruleId":"171","severity":1,"message":"172","line":10,"column":1,"nodeType":"173","endLine":10,"endColumn":60},{"ruleId":"167","severity":1,"message":"174","line":53,"column":11,"nodeType":"169","messageId":"170","endLine":53,"endColumn":19},{"ruleId":"175","severity":1,"message":"176","line":64,"column":8,"nodeType":"177","endLine":64,"endColumn":23,"suggestions":"178"},{"ruleId":"163","replacedBy":"179"},{"ruleId":"165","replacedBy":"180"},{"ruleId":"167","severity":1,"message":"181","line":1,"column":34,"nodeType":"169","messageId":"170","endLine":1,"endColumn":38},{"ruleId":"167","severity":1,"message":"182","line":1,"column":40,"nodeType":"169","messageId":"170","endLine":1,"endColumn":45},{"ruleId":"167","severity":1,"message":"183","line":1,"column":47,"nodeType":"169","messageId":"170","endLine":1,"endColumn":56},{"ruleId":"167","severity":1,"message":"184","line":19,"column":11,"nodeType":"169","messageId":"170","endLine":19,"endColumn":18},{"ruleId":"167","severity":1,"message":"185","line":20,"column":13,"nodeType":"169","messageId":"170","endLine":20,"endColumn":24},{"ruleId":"163","replacedBy":"186"},{"ruleId":"165","replacedBy":"187"},{"ruleId":"167","severity":1,"message":"188","line":5,"column":8,"nodeType":"169","messageId":"170","endLine":5,"endColumn":19},{"ruleId":"167","severity":1,"message":"189","line":42,"column":10,"nodeType":"169","messageId":"170","endLine":42,"endColumn":15},{"ruleId":"167","severity":1,"message":"189","line":43,"column":10,"nodeType":"169","messageId":"170","endLine":43,"endColumn":15},"no-native-reassign",["190"],"no-negated-in-lhs",["191"],"no-unused-vars","'NavBar' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'allItems' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'items'. Either include it or remove the dependency array.","ArrayExpression",["192"],["190"],["191"],"'Grid' is defined but never used.","'Paper' is defined but never used.","'TextField' is defined but never used.","'classes' is assigned a value but never used.","'currentUser' is assigned a value but never used.",["190"],["191"],"'CssBaseline' is defined but never used.","'error' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"193","fix":"194"},"Update the dependencies array to be: [items, selectedItems]",{"range":"195","text":"196"},[2034,2049],"[items, selectedItems]"]