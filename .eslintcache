[{"C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\index.js":"1","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\reportWebVitals.js":"2","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\App.js":"3","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\contexts\\AuthContexts.js":"4","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\layout\\Layout.js":"5","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\theme\\theme.js":"6","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\components\\navBar\\NavBar.js":"7","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\Home\\index.js":"8","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\UserProfile\\index.js":"9","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\FlowerBeds\\index.js":"10","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\data\\firebase.js":"11","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\components\\navBar\\buttons\\UserProfileButton.js":"12","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\shared\\StyledLink.js":"13","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\components\\navBar\\NavBarLogo.js":"14","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\components\\navBar\\buttons\\SignupButton.js":"15","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\components\\navBar\\buttons\\SigninButton.js":"16","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\components\\navBar\\buttons\\SignoutButton.js":"17","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\UserProfile\\UserProfile.js":"18","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\FlowerBeds\\FlowerBeds.js":"19","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\Home\\Home.js":"20","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\shared\\StyledModalCloseButton.js":"21","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\shared\\ReturnButton.js":"22","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\FlowerBeds\\CreateFlowerBed.js":"23","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\FlowerBeds\\ExistingFlowerBeds.js":"24","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\Home\\LoginReminder.js":"25","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\routes\\Routes.js":"26","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\components\\navBar\\buttons\\NavBarButton.js":"27","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\CreateGarden\\index.js":"28","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\CreateGarden\\CreateGarden.js":"29","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\routes\\NotFound.js":"30","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\CreateGarden\\Form\\Form.js":"31","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\CreateGarden\\SelectVegetables\\SelectVegetables.js":"32","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\CreateGarden\\SelectVegetables\\RecommendedVegetables.js":"33","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\CreateGarden\\SelectVegetables\\SelectedVegetables.js":"34","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\layout\\navBar\\NavBar.js":"35","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\layout\\navBar\\buttons\\SigninButton.js":"36","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\layout\\navBar\\NavBarLogo.js":"37","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\layout\\navBar\\buttons\\UserProfileButton.js":"38","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\layout\\navBar\\buttons\\SignupButton.js":"39","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\layout\\navBar\\buttons\\SignoutButton.js":"40","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\layout\\navBar\\buttons\\NavBarButton.js":"41","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\SelectGardenType\\index.js":"42","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\SelectGardenType\\SelectGardenType.js":"43","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\SelectGardenType\\GardenTypes.js":"44"},{"size":494,"mtime":1612908363746,"results":"45","hashOfConfig":"46"},{"size":375,"mtime":1612903922348,"results":"47","hashOfConfig":"46"},{"size":578,"mtime":1614462379171,"results":"48","hashOfConfig":"46"},{"size":1035,"mtime":1614013931148,"results":"49","hashOfConfig":"46"},{"size":258,"mtime":1614595750819,"results":"50","hashOfConfig":"46"},{"size":388,"mtime":1614439671856,"results":"51","hashOfConfig":"46"},{"size":1458,"mtime":1614446008338,"results":"52","hashOfConfig":"46"},{"size":48,"mtime":1613742268444,"results":"53","hashOfConfig":"46"},{"size":68,"mtime":1613998380129,"results":"54","hashOfConfig":"46"},{"size":64,"mtime":1613742268443,"results":"55","hashOfConfig":"46"},{"size":875,"mtime":1614080020311,"results":"56","hashOfConfig":"46"},{"size":544,"mtime":1614461026055,"results":"57","hashOfConfig":"46"},{"size":329,"mtime":1613742268448,"results":"58","hashOfConfig":"46"},{"size":893,"mtime":1614461026014,"results":"59","hashOfConfig":"46"},{"size":4401,"mtime":1614461026049,"results":"60","hashOfConfig":"46"},{"size":3375,"mtime":1614550091442,"results":"61","hashOfConfig":"46"},{"size":550,"mtime":1614461026040,"results":"62","hashOfConfig":"46"},{"size":558,"mtime":1614596707787,"results":"63","hashOfConfig":"46"},{"size":614,"mtime":1613742268462,"results":"64","hashOfConfig":"46"},{"size":1672,"mtime":1614617732474,"results":"65","hashOfConfig":"46"},{"size":258,"mtime":1613742268449,"results":"66","hashOfConfig":"46"},{"size":554,"mtime":1613742268448,"results":"67","hashOfConfig":"46"},{"size":422,"mtime":1613742268465,"results":"68","hashOfConfig":"46"},{"size":744,"mtime":1614439671837,"results":"69","hashOfConfig":"46"},{"size":2115,"mtime":1614617728609,"results":"70","hashOfConfig":"46"},{"size":762,"mtime":1614597357816,"results":"71","hashOfConfig":"46"},{"size":591,"mtime":1614461026020,"results":"72","hashOfConfig":"46"},{"size":70,"mtime":1614462322522,"results":"73","hashOfConfig":"46"},{"size":3483,"mtime":1614619075750,"results":"74","hashOfConfig":"46"},{"size":107,"mtime":1614464075017,"results":"75","hashOfConfig":"46"},{"size":3125,"mtime":1614705278713,"results":"76","hashOfConfig":"46"},{"size":3478,"mtime":1614716336007,"results":"77","hashOfConfig":"46"},{"size":2510,"mtime":1614619511389,"results":"78","hashOfConfig":"46"},{"size":1922,"mtime":1614550840954,"results":"79","hashOfConfig":"46"},{"size":1458,"mtime":1614595694027,"results":"80","hashOfConfig":"46"},{"size":3375,"mtime":1614595694032,"results":"81","hashOfConfig":"46"},{"size":893,"mtime":1614595694029,"results":"82","hashOfConfig":"46"},{"size":544,"mtime":1614595694034,"results":"83","hashOfConfig":"46"},{"size":4401,"mtime":1614595694033,"results":"84","hashOfConfig":"46"},{"size":550,"mtime":1614595694033,"results":"85","hashOfConfig":"46"},{"size":591,"mtime":1614595694031,"results":"86","hashOfConfig":"46"},{"size":82,"mtime":1614617980291,"results":"87","hashOfConfig":"46"},{"size":1944,"mtime":1614790253129,"results":"88","hashOfConfig":"46"},{"size":395,"mtime":1614787485266,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"sq2clo",{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"92"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"105"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"105"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"92"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"92"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"92"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"92"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"92"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"92"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"92"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"92"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\index.js",[],["190","191"],"C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\reportWebVitals.js",[],"C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\App.js",[],"C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\contexts\\AuthContexts.js",[],"C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\layout\\Layout.js",[],"C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\theme\\theme.js",[],"C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\components\\navBar\\NavBar.js",[],["192","193"],"C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\Home\\index.js",[],"C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\UserProfile\\index.js",[],"C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\FlowerBeds\\index.js",[],"C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\data\\firebase.js",[],"C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\components\\navBar\\buttons\\UserProfileButton.js",[],"C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\shared\\StyledLink.js",["194"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledLink = styled(Link)`\r\n  text-decoration: none;\r\n  &:focus,\r\n  &:hover,\r\n  &:visited,\r\n  &:link,\r\n  &:active {\r\n    text-decoration: none;\r\n  }\r\n`;\r\n\r\nexport default (props) => <StyledLink {...props} />;\r\n","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\components\\navBar\\NavBarLogo.js",[],"C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\components\\navBar\\buttons\\SignupButton.js",["195","196"],"import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport StyledCloseButton from \"../../../shared/StyledModalCloseButton\";\r\nimport CloseIcon from \"@material-ui/icons/CloseSharp\";\r\nimport { useAuth } from \"../../../contexts/AuthContexts\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: \"absolute\",\r\n    top: 110,\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 1),\r\n  },\r\n  signupButton: {\r\n    marginRight: theme.spacing(1),\r\n    \"&:hover\": {\r\n      backgroundColor: \"white\",\r\n      boxShadow: `5px -5px ${theme.primary.darkGreen}`,\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function SignUpButton() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n  const [email, setEmail] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [passwordConfirm, setPasswordConfirm] = useState();\r\n  const { signUp, currentUser } = useAuth();\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  function handleEmailChange(value) {\r\n    setEmail(value);\r\n  }\r\n\r\n  function handlePasswordChange(value) {\r\n    setPassword(value);\r\n  }\r\n\r\n  function handlePasswordConfirmChange(value) {\r\n    setPasswordConfirm(value);\r\n  }\r\n\r\n  function handleSignUp() {\r\n    if (password !== passwordConfirm) {\r\n      setError(\"Hasła nie są jednakowe!\");\r\n    }\r\n    console.log(currentUser);\r\n    try {\r\n      setError(\"\");\r\n      signUp(email, password);\r\n    } catch {\r\n      setError(\"Nie udało się stworzyć konta\");\r\n    }\r\n  }\r\n\r\n  const body = (\r\n    <Modal\r\n      open={open}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"sign-up-modal\"\r\n      aria-describedby=\"sign-up-modal\"\r\n    >\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <div className={classes.paper}>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Rejestracja\r\n          </Typography>\r\n          <StyledCloseButton onClick={handleClose}>\r\n            <CloseIcon />\r\n          </StyledCloseButton>\r\n          <FormControl fullWidth required>\r\n            {currentUser && currentUser.email}\r\n            <TextField\r\n              required\r\n              variant=\"outlined\"\r\n              id=\"email\"\r\n              label=\"Adres email\"\r\n              name=\"email\"\r\n              margin=\"normal\"\r\n              autoComplete=\"email\"\r\n              value={email}\r\n              onChange={(e) => handleEmailChange(e.target.value)}\r\n              autoFocus\r\n            />\r\n            <TextField\r\n              required\r\n              variant=\"outlined\"\r\n              name=\"password\"\r\n              label=\"Hasło\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              margin=\"normal\"\r\n              autoComplete=\"current-password\"\r\n              value={password}\r\n              onChange={(e) => handlePasswordChange(e.target.value)}\r\n            />\r\n            <TextField\r\n              required\r\n              variant=\"outlined\"\r\n              name=\"password-confirm\"\r\n              label=\"Powtórz hasło\"\r\n              type=\"password\"\r\n              id=\"password-confirm\"\r\n              margin=\"normal\"\r\n              autoComplete=\"current-password\"\r\n              value={passwordConfirm}\r\n              onChange={(e) => handlePasswordConfirmChange(e.target.value)}\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onClick={(e) => handleSignUp(e)}\r\n            >\r\n              Załóż konto\r\n            </Button>\r\n          </FormControl>\r\n        </div>\r\n      </Container>\r\n    </Modal>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        onClick={handleOpen}\r\n        variant=\"outlined\"\r\n        className={classes.signupButton}\r\n      >\r\n        Załóż konto\r\n      </Button>\r\n      {body}\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\components\\navBar\\buttons\\SigninButton.js",["197"],"import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport NavBarButton from \"./NavBarButton\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport StyledCloseButton from \"../../../shared/StyledModalCloseButton\";\r\nimport CloseIcon from \"@material-ui/icons/CloseSharp\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport { useAuth } from \"../../../contexts/AuthContexts\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: \"absolute\",\r\n    top: 110,\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 1),\r\n  },\r\n}));\r\n\r\nexport default function SignInButton() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n  const [email, setEmail] = useState();\r\n  const [password, setPassword] = useState();\r\n  const { signIn } = useAuth();\r\n  const [error, setError] = useState();\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  function handleEmailChange(value) {\r\n    setEmail(value);\r\n  }\r\n\r\n  function handlePasswordChange(value) {\r\n    setPassword(value);\r\n  }\r\n\r\n  function handleSignIn() {\r\n    try {\r\n      setError(\"\");\r\n      signIn(email, password);\r\n    } catch {\r\n      setError(\"Nie udało się stworzyć konta\");\r\n    }\r\n  }\r\n\r\n  const body = (\r\n    <Modal\r\n      open={open}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"sign-in-modal\"\r\n      aria-describedby=\"sign-in-modal\"\r\n    >\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <div className={classes.paper}>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Logowanie\r\n          </Typography>\r\n          <StyledCloseButton onClick={handleClose}>\r\n            <CloseIcon />\r\n          </StyledCloseButton>\r\n          <FormControl fullWidth required>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              id=\"email\"\r\n              label=\"Adres email\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              value={email}\r\n              onChange={(e) => handleEmailChange(e.target.value)}\r\n              autoFocus\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              name=\"password\"\r\n              label=\"Hasło\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              value={password}\r\n              onChange={(e) => handlePasswordChange(e.target.value)}\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={() => handleSignIn()}\r\n            >\r\n              Zaloguj się\r\n            </Button>\r\n          </FormControl>\r\n        </div>\r\n      </Container>\r\n    </Modal>\r\n  );\r\n  return (\r\n    <>\r\n      <NavBarButton onClick={handleOpen}>Zaloguj się</NavBarButton>\r\n      {body}\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\components\\navBar\\buttons\\SignoutButton.js",[],"C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\UserProfile\\UserProfile.js",["198","199"],"import { Container, Typography } from '@material-ui/core'\r\nimport { useAuth } from '../../contexts/AuthContexts'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n}));\r\n\r\n\r\nexport default function UserProfile() {\r\n    const classes = useStyles();\r\n    const { currentUser } = useAuth()\r\n\r\n    return (\r\n        <>\r\n            <Container maxWidth=\"sm\">\r\n                <Typography component=\"div\" style={{ backgroundColor: '#cfe8fc', height: '80vh' }} />\r\n            </Container>\r\n        </>\r\n    )\r\n}","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\FlowerBeds\\FlowerBeds.js",[],"C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\Home\\Home.js",[],"C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\shared\\StyledModalCloseButton.js",["200"],"import styled from 'styled-components'\r\nimport IconButton from '@material-ui/core/IconButton'\r\n\r\nconst StyledCloseButton = styled(IconButton)`\r\n    position:absolute;\r\n    right:0;\r\n    top:0;\r\n`\r\n\r\nexport default (props) => <StyledCloseButton {...props} />;","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\shared\\ReturnButton.js",[],"C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\FlowerBeds\\CreateFlowerBed.js",[],"C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\FlowerBeds\\ExistingFlowerBeds.js",[],"C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\Home\\LoginReminder.js",[],"C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\routes\\Routes.js",[],"C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\components\\navBar\\buttons\\NavBarButton.js",[],"C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\CreateGarden\\index.js",[],"C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\CreateGarden\\CreateGarden.js",["201"],"import Form from './Form/Form'\r\nimport SelectVegetables from './SelectVegetables/SelectVegetables'\r\nimport { useState, useEffect } from 'react'\r\nimport { Button, Container } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { useAuth } from '../../contexts/AuthContexts'\r\nimport { firestore } from \"../../data/firebase\";\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    button: {\r\n        margin: theme.spacing(3, 1),\r\n        padding: theme.spacing(1, 3),\r\n    },\r\n}));\r\n\r\nexport default function CreateGarden() {\r\n    const classes = useStyles()\r\n    const navigate = useNavigate()\r\n    const { currentUser } = useAuth()\r\n    const [currentStep, setCurrentStep] = useState(1)\r\n    const [width, setWidth] = useState(null)\r\n    const [length, setLength] = useState(null)\r\n    const [widthError, setWidthError] = useState(null);\r\n    const [lengthError, setLengthError] = useState(null);\r\n    const [insolationValue, setInsolationValue] = useState(\"large\")\r\n    const [items, setItems] = useState([]);\r\n\r\n    useEffect(\r\n        function loadData() {\r\n            const fetchData = async () => {\r\n                const vegetables = await firestore.collection(\"Vegetables\").get();\r\n                const tmp = [];\r\n                vegetables.docs.map(async (doc) => {\r\n                    tmp.push({ id: doc.id, ...doc.data() });\r\n                });\r\n                tmp.sort((a, b) => a.name > b.name ? 1 : -1)\r\n                setItems(tmp);\r\n            };\r\n            fetchData();\r\n        }, []);\r\n\r\n\r\n\r\n    var body;\r\n    var buttons;\r\n\r\n    function handleClickNext() {\r\n        if (!width) {\r\n            setWidthError(true);\r\n            return;\r\n        }\r\n        if (!length) {\r\n            setLengthError(true);\r\n            return;\r\n        }\r\n        if (currentStep === 3) {\r\n            setCurrentStep(1)\r\n        }\r\n        setCurrentStep(currentStep + 1)\r\n    }\r\n\r\n    function handleBackToTypeSelect() {\r\n        navigate('../../select-type')\r\n    }\r\n\r\n    function handleClickBack() {\r\n        setCurrentStep(currentStep - 1)\r\n    }\r\n\r\n    if (currentStep === 1) {\r\n        body = <Form width={width} setWidth={setWidth}\r\n            length={length} setLength={setLength}\r\n            insolationValue={insolationValue} setInsolationValue={setInsolationValue}\r\n            widthError={widthError} setWidthError={setWidthError}\r\n            lengthError={lengthError} setLengthError={setLengthError}\r\n        />\r\n        buttons = (\r\n            <>\r\n                <Button className={classes.button} variant=\"outlined\" onClick={() => handleBackToTypeSelect()}>Cofnij</Button>\r\n                <Button className={classes.button} variant=\"contained\" color=\"primary\" onClick={() => handleClickNext()}>Kontynuuj</Button>\r\n            </>\r\n        )\r\n    }\r\n    else if (currentStep === 2) {\r\n        body = <SelectVegetables items={items} setItems={setItems} />\r\n        buttons = (\r\n            <>\r\n                <Button className={classes.button} variant=\"outlined\" onClick={() => handleClickBack()}>Cofnij</Button>\r\n                <Button className={classes.button} variant=\"contained\" color=\"primary\" onClick={() => handleClickNext()}>Kontynuuj</Button>\r\n            </>)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {body}\r\n            <Container className={classes.container} align=\"center\">\r\n                {buttons}\r\n            </Container>\r\n        </>\r\n    )\r\n}","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\routes\\NotFound.js",[],"C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\CreateGarden\\Form\\Form.js",[],"C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\CreateGarden\\SelectVegetables\\SelectVegetables.js",["202","203"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport GridList from \"@material-ui/core/GridList\";\r\nimport GridListTile from \"@material-ui/core/GridListTile\";\r\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport SelectedVegetables from \"./SelectedVegetables\";\r\nimport RecommendedVegetables from './RecommendedVegetables'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  gridList: {\r\n    width: 1000,\r\n    height: 600,\r\n  },\r\n  icon: {\r\n    color: \"rgba(255, 255, 255, 0.54)\",\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-around\",\r\n  },\r\n  header: {\r\n    padding: theme.spacing(1)\r\n  },\r\n  barTitle: {\r\n    whiteSpace: \"nowrap\",\r\n    overflow: \"hidden\",\r\n    width: \"\",\r\n    transform: \"translateX(0)\",\r\n    transition: \"1s\",\r\n    \"&:hover\": {\r\n      transform: \"translateX(calc(100px - 100%))\",\r\n      overflow: 'visible',\r\n    }\r\n  },\r\n  tile: {\r\n  }\r\n}));\r\n\r\nexport default function SelectVegetables({ items, setItems }) {\r\n  const classes = useStyles();\r\n  const [selectedItems, setSelectedItems] = useState([]);\r\n  const [recommendedItems, setRecommendedItems] = useState([]);\r\n\r\n  useEffect(\r\n    function updateRecommendation() {\r\n      var matchedItems = [];\r\n      var allItems = []\r\n      selectedItems.forEach(item => item.likesArray.forEach(it => {\r\n        for (let i = 0; i < items.length; i++) {\r\n          if (it === items[i].id) {\r\n            matchedItems.push(items[i]);\r\n          }\r\n        }\r\n        ///TODO ITEMS PROPER MAPPING\r\n      }))\r\n      setRecommendedItems([...matchedItems])\r\n\r\n    }, [selectedItems]);\r\n\r\n  function findItem(item) {\r\n    return selectedItems.some(el => el.id === item.id)\r\n  }\r\n\r\n  function handleClick(item) {\r\n    const founded = findItem(item);\r\n    if (!founded) {\r\n      setSelectedItems((selectedItems) => [...selectedItems, item]);\r\n    }\r\n  }\r\n\r\n  function deleteSelectedItem(id) {\r\n    setSelectedItems((selectedData) =>\r\n      selectedData.filter((item) => item.id !== id)\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h4\" align=\"center\" className={classes.header}>\r\n        Wybierz warzywa do zasadzenia\r\n        </Typography>\r\n      <div className={classes.container}>\r\n        <GridList className={classes.gridList} cellHeight={400}>\r\n          {items.map((item) => (\r\n            <GridListTile key={item.image} cols={0.4} rows={0.5}\r\n              classes={{ tile: classes.tile }}\r\n            >\r\n              <img src={item.image} alt={item.id} />\r\n              <GridListTileBar\r\n                classes={{ title: classes.barTitle }}\r\n                title={item.name}\r\n                actionIcon={\r\n                  <IconButton\r\n                    className={classes.icon}\r\n                    onClick={() => handleClick(item)}\r\n                  >\r\n                    <AddIcon />\r\n                  </IconButton>\r\n                }\r\n              />\r\n            </GridListTile>\r\n          ))}\r\n        </GridList>\r\n        {selectedItems && (\r\n          <SelectedVegetables\r\n            selectedItems={selectedItems}\r\n            deleteSelectedItem={deleteSelectedItem}\r\n          />\r\n        )}\r\n        <RecommendedVegetables recommendedItems={recommendedItems} addItem={handleClick} />\r\n      </div>\r\n    </>\r\n  );\r\n}","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\CreateGarden\\SelectVegetables\\RecommendedVegetables.js",[],"C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\CreateGarden\\SelectVegetables\\SelectedVegetables.js",["204"],"import RemoveIcon from \"@material-ui/icons/Remove\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport styled from 'styled-components'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  list: {\r\n    maxHeight: '67vh',\r\n    overflowY: 'auto'\r\n  },\r\n  header: {\r\n    backgroundColor: '#f5f5f9',\r\n    color: 'rgba(0, 0, 0, 0.87)',\r\n    maxWidth: 220,\r\n    fontSize: theme.typography.pxToRem(16),\r\n    border: '1px solid #dadde9',\r\n\r\n  },\r\n}));\r\n\r\n\r\nexport default function SelectedVegetables({\r\n  selectedItems,\r\n  deleteSelectedItem,\r\n}) {\r\n  const classes = useStyles()\r\n\r\n  function handleClick(id) {\r\n    deleteSelectedItem(id);\r\n  }\r\n\r\n  return (\r\n    <Grid item xs={2} md={2}>\r\n      <Typography align=\"center\" className={classes.header}>Wybrane warzywa</Typography>\r\n      <List className={classes.list}>\r\n        {selectedItems.map((item) => {\r\n          return (\r\n            <ListItem key={item.id}>\r\n              <ListItemAvatar>\r\n                <Avatar alt={item.id} src={item.image} />\r\n              </ListItemAvatar>\r\n              <ListItemText id={item.id} primary={item.name} />\r\n              <ListItemSecondaryAction>\r\n                <IconButton variant='contained' onClick={() => handleClick(item.id)} >\r\n                  <RemoveIcon />\r\n                </IconButton>\r\n              </ListItemSecondaryAction>\r\n            </ListItem>)\r\n        })}\r\n      </List>\r\n    </Grid>\r\n  );\r\n}","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\layout\\navBar\\NavBar.js",[],"C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\layout\\navBar\\buttons\\SigninButton.js",["205"],"C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\layout\\navBar\\NavBarLogo.js",[],"C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\layout\\navBar\\buttons\\UserProfileButton.js",["206"],"import Button from \"./NavBarButton\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useAuth } from \"../../../contexts/AuthContexts\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport default function UserProfileButton() {\r\n  const { currentUser } = useAuth();\r\n  const navigate = useNavigate();\r\n  function handleClick() {\r\n    navigate(`profile/${currentUser.uid}`);\r\n  }\r\n  return (\r\n    <>\r\n      {currentUser && (\r\n        <Button onClick={() => handleClick()}>Twój profil</Button>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\layout\\navBar\\buttons\\SignupButton.js",["207"],"import React, { useState } from \"react\";\r\nimport NavBarButton from \"./NavBarButton\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport StyledCloseButton from \"../../../shared/StyledModalCloseButton\";\r\nimport CloseIcon from \"@material-ui/icons/CloseSharp\";\r\nimport { useAuth } from \"../../../contexts/AuthContexts\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: \"absolute\",\r\n    top: 110,\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n  signupButton: {\r\n    marginRight: theme.spacing(1),\r\n    \"&:hover\": {\r\n      boxShadow: `5px -5px ${theme.primary.darkGreen}`,\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function SignUpButton() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n  const [email, setEmail] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [passwordConfirm, setPasswordConfirm] = useState();\r\n  const { signUp, currentUser } = useAuth();\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  function handleEmailChange(value) {\r\n    setEmail(value);\r\n  }\r\n\r\n  function handlePasswordChange(value) {\r\n    setPassword(value);\r\n  }\r\n\r\n  function handlePasswordConfirmChange(value) {\r\n    setPasswordConfirm(value);\r\n  }\r\n\r\n  function handleSignUp() {\r\n    if (password !== passwordConfirm) {\r\n      setError(\"Hasła nie są jednakowe!\");\r\n    }\r\n    console.log(currentUser);\r\n    try {\r\n      setError(\"\");\r\n      signUp(email, password);\r\n    } catch {\r\n      setError(\"Nie udało się stworzyć konta\");\r\n    }\r\n  }\r\n\r\n  const body = (\r\n    <Modal\r\n      open={open}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"sign-up-modal\"\r\n      aria-describedby=\"sign-up-modal\"\r\n    >\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <div className={classes.paper}>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Rejestracja\r\n          </Typography>\r\n          <StyledCloseButton onClick={handleClose}>\r\n            <CloseIcon />\r\n          </StyledCloseButton>\r\n          <FormControl fullWidth required>\r\n            {currentUser && currentUser.email}\r\n            <TextField\r\n              required\r\n              variant=\"outlined\"\r\n              id=\"email\"\r\n              label=\"Adres email\"\r\n              name=\"email\"\r\n              margin=\"normal\"\r\n              autoComplete=\"email\"\r\n              value={email}\r\n              onChange={(e) => handleEmailChange(e.target.value)}\r\n              autoFocus\r\n            />\r\n            <TextField\r\n              required\r\n              variant=\"outlined\"\r\n              name=\"password\"\r\n              label=\"Hasło\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              margin=\"normal\"\r\n              autoComplete=\"current-password\"\r\n              value={password}\r\n              onChange={(e) => handlePasswordChange(e.target.value)}\r\n            />\r\n            <TextField\r\n              required\r\n              variant=\"outlined\"\r\n              name=\"password-confirm\"\r\n              label=\"Powtórz hasło\"\r\n              type=\"password\"\r\n              id=\"password-confirm\"\r\n              margin=\"normal\"\r\n              autoComplete=\"current-password\"\r\n              value={passwordConfirm}\r\n              onChange={(e) => handlePasswordConfirmChange(e.target.value)}\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={(e) => handleSignUp(e)}\r\n            >\r\n              Załóż konto\r\n            </Button>\r\n          </FormControl>\r\n        </div>\r\n      </Container>\r\n    </Modal>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <NavBarButton\r\n        onClick={handleOpen}\r\n        variant=\"outlined\"\r\n        className={classes.signupButton}\r\n      >\r\n        Załóż konto\r\n      </NavBarButton>\r\n      {body}\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\layout\\navBar\\buttons\\SignoutButton.js",[],"C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\layout\\navBar\\buttons\\NavBarButton.js",[],"C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\SelectGardenType\\index.js",[],"C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\SelectGardenType\\SelectGardenType.js",[],"C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\SelectGardenType\\GardenTypes.js",[],{"ruleId":"208","replacedBy":"209"},{"ruleId":"210","replacedBy":"211"},{"ruleId":"208","replacedBy":"212"},{"ruleId":"210","replacedBy":"213"},{"ruleId":"214","severity":1,"message":"215","line":16,"column":1,"nodeType":"216","endLine":16,"endColumn":53},{"ruleId":"217","severity":1,"message":"218","line":3,"column":8,"nodeType":"219","messageId":"220","endLine":3,"endColumn":19},{"ruleId":"217","severity":1,"message":"221","line":43,"column":10,"nodeType":"219","messageId":"220","endLine":43,"endColumn":15},{"ruleId":"217","severity":1,"message":"221","line":35,"column":10,"nodeType":"219","messageId":"220","endLine":35,"endColumn":15},{"ruleId":"217","severity":1,"message":"222","line":11,"column":11,"nodeType":"219","messageId":"220","endLine":11,"endColumn":18},{"ruleId":"217","severity":1,"message":"223","line":12,"column":13,"nodeType":"219","messageId":"220","endLine":12,"endColumn":24},{"ruleId":"214","severity":1,"message":"215","line":10,"column":1,"nodeType":"216","endLine":10,"endColumn":60},{"ruleId":"217","severity":1,"message":"223","line":20,"column":13,"nodeType":"219","messageId":"220","endLine":20,"endColumn":24},{"ruleId":"217","severity":1,"message":"224","line":50,"column":11,"nodeType":"219","messageId":"220","endLine":50,"endColumn":19},{"ruleId":"225","severity":1,"message":"226","line":61,"column":8,"nodeType":"227","endLine":61,"endColumn":23,"suggestions":"228"},{"ruleId":"217","severity":1,"message":"229","line":3,"column":8,"nodeType":"219","messageId":"220","endLine":3,"endColumn":14},{"ruleId":"217","severity":1,"message":"221","line":35,"column":10,"nodeType":"219","messageId":"220","endLine":35,"endColumn":15},{"ruleId":"217","severity":1,"message":"230","line":4,"column":10,"nodeType":"219","messageId":"220","endLine":4,"endColumn":20},{"ruleId":"217","severity":1,"message":"221","line":39,"column":10,"nodeType":"219","messageId":"220","endLine":39,"endColumn":15},"no-native-reassign",["231"],"no-negated-in-lhs",["232"],["231"],["232"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'CssBaseline' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'classes' is assigned a value but never used.","'currentUser' is assigned a value but never used.","'allItems' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'items'. Either include it or remove the dependency array.","ArrayExpression",["233"],"'styled' is defined but never used.","'makeStyles' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"234","fix":"235"},"Update the dependencies array to be: [items, selectedItems]",{"range":"236","text":"237"},[1785,1800],"[items, selectedItems]"]