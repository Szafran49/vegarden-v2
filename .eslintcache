[{"C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\index.js":"1","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\reportWebVitals.js":"2","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\App.js":"3","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\layout\\Layout.js":"4","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\components\\navBar\\NavBar.js":"5","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\components\\navBar\\SignUpButton.js":"6","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\components\\navBar\\NavBarLogo.js":"7","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\components\\navBar\\SignInButton.js":"8","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\shared\\StyledLink.js":"9","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\data\\firebase.js":"10","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\data\\Auth.js":"11","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\theme\\theme.js":"12","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\Home\\index.js":"13","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\FlowerBedForm\\index.js":"14","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\FlowerBeds\\index.js":"15","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\SelectVegetables\\index.js":"16","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\Home\\Home.js":"17","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\FlowerBedForm\\FlowerBedForm.js":"18","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\FlowerBeds\\FlowerBeds.js":"19","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\SelectVegetables\\Vegetables.js":"20","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\shared\\StyledModalCloseButton.js":"21","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\shared\\ReturnButton.js":"22","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\FlowerBeds\\CreateFlowerBed.js":"23","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\SelectVegetables\\VegetableSelector.js":"24","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\FlowerBeds\\ExistingFlowerBeds.js":"25","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\SelectVegetables\\SelectedVegetables.js":"26","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\SelectVegetables\\RecommendedVegetables.js":"27"},{"size":494,"mtime":1612908363746,"results":"28","hashOfConfig":"29"},{"size":375,"mtime":1612903922348,"results":"30","hashOfConfig":"29"},{"size":1158,"mtime":1613741853845,"results":"31","hashOfConfig":"29"},{"size":93,"mtime":1612903922348,"results":"32","hashOfConfig":"29"},{"size":1029,"mtime":1613741853846,"results":"33","hashOfConfig":"29"},{"size":3455,"mtime":1613741853848,"results":"34","hashOfConfig":"29"},{"size":268,"mtime":1613741853846,"results":"35","hashOfConfig":"29"},{"size":3511,"mtime":1613741853847,"results":"36","hashOfConfig":"29"},{"size":329,"mtime":1613741853859,"results":"37","hashOfConfig":"29"},{"size":740,"mtime":1613741853850,"results":"38","hashOfConfig":"29"},{"size":358,"mtime":1613741853849,"results":"39","hashOfConfig":"29"},{"size":379,"mtime":1613741853860,"results":"40","hashOfConfig":"29"},{"size":48,"mtime":1613741853855,"results":"41","hashOfConfig":"29"},{"size":73,"mtime":1613741853852,"results":"42","hashOfConfig":"29"},{"size":64,"mtime":1613741853854,"results":"43","hashOfConfig":"29"},{"size":65,"mtime":1613741853858,"results":"44","hashOfConfig":"29"},{"size":850,"mtime":1613741853855,"results":"45","hashOfConfig":"29"},{"size":3933,"mtime":1613741853851,"results":"46","hashOfConfig":"29"},{"size":614,"mtime":1613741853853,"results":"47","hashOfConfig":"29"},{"size":271,"mtime":1613741853857,"results":"48","hashOfConfig":"29"},{"size":258,"mtime":1613741853860,"results":"49","hashOfConfig":"29"},{"size":554,"mtime":1613741853858,"results":"50","hashOfConfig":"29"},{"size":422,"mtime":1613741853852,"results":"51","hashOfConfig":"29"},{"size":3504,"mtime":1613741853857,"results":"52","hashOfConfig":"29"},{"size":744,"mtime":1613741853853,"results":"53","hashOfConfig":"29"},{"size":1828,"mtime":1613741853856,"results":"54","hashOfConfig":"29"},{"size":1929,"mtime":1613741991973,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"sq2clo",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"58"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\index.js",[],["118","119"],"C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\reportWebVitals.js",[],"C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\App.js",["120"],"import React from \"react\";\r\nimport Home from \"./pages/Home\";\r\nimport Layout from \"./layout/Layout\";\r\nimport NavBar from \"./components/navBar/NavBar\";\r\nimport FlowerBeds from \"./pages/FlowerBeds\";\r\nimport FlowerBedForm from \"./pages/FlowerBedForm\";\r\nimport Vegetables from \"./pages/SelectVegetables\";\r\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\r\nimport { AuthProvider } from \"./data/Auth\";\r\nimport ThemeProvider from '@material-ui/styles/ThemeProvider';\r\nimport theme from './theme/theme'\r\n\r\nexport default function App() {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Router>\r\n        <Layout>\r\n          <NavBar />\r\n          <Routes>\r\n            <Route path=\"/\" element={<Home />} />\r\n            <Route path=\"/flower-beds\">\r\n              <Route path=\"/overview\" element={<FlowerBeds />} />\r\n              <Route path=\"/create\">\r\n                <Route path=\"/form\" element={<FlowerBedForm />} />\r\n                <Route path=\"/select-vegetables\" element={<Vegetables />} />\r\n              </Route>\r\n            </Route>\r\n          </Routes>\r\n        </Layout>\r\n      </Router>\r\n    </ThemeProvider>\r\n\r\n  );\r\n}\r\n","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\layout\\Layout.js",[],"C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\components\\navBar\\NavBar.js",[],"C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\components\\navBar\\SignUpButton.js",["121","122"],"import React, { useCallback } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Link from \"../../shared/StyledLink\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport StyledCloseButton from '../../shared/StyledModalCloseButton'\r\nimport CloseIcon from '@material-ui/icons/CloseSharp'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: \"absolute\",\r\n    top: 110,\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignUpButton({ history }) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleSignUp = useCallback(async event => {\r\n    event.preventDefault()\r\n\r\n  })\r\n  const body = (\r\n    <Modal\r\n      open={open}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"sign-up-modal\"\r\n      aria-describedby=\"sign-up-modal\"\r\n    >\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Rejestracja\r\n          </Typography>\r\n          <StyledCloseButton onClick={handleClose}>\r\n            <CloseIcon />\r\n          </StyledCloseButton>\r\n          <FormControl fullWidth required>\r\n            <TextField\r\n              autoFocus\r\n              required\r\n              variant=\"outlined\"\r\n              id=\"username\"\r\n              label=\"Nazwa użytkownika\"\r\n              name=\"username\"\r\n              autoComplete=\"username\"\r\n              margin=\"normal\"\r\n            />\r\n            <TextField\r\n              required\r\n              variant=\"outlined\"\r\n              id=\"email\"\r\n              label=\"Adres email\"\r\n              name=\"email\"\r\n              margin=\"normal\"\r\n              autoComplete=\"email\"\r\n            />\r\n            <TextField\r\n              required\r\n              variant=\"outlined\"\r\n              name=\"password\"\r\n              label=\"Hasło\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              margin=\"normal\"\r\n              autoComplete=\"current-password\"\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Załóż konto\r\n            </Button>\r\n            <Grid container justify=\"flex-end\">\r\n              <Grid item>\r\n                <Link to=\"/\" variant=\"body2\">\r\n                  Masz już konto? Zaloguj się!\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </FormControl>\r\n        </div>\r\n      </Container>\r\n    </Modal>\r\n  );\r\n  return (\r\n    <>\r\n      <Button onClick={handleOpen} variant=\"outlined\">\r\n        Zarejestruj\r\n      </Button>\r\n      {body}\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\components\\navBar\\NavBarLogo.js",[],"C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\components\\navBar\\SignInButton.js",["123"],"import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"../../shared/StyledLink\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport StyledCloseButton from '../../shared/StyledModalCloseButton'\r\nimport CloseIcon from '@material-ui/icons/CloseSharp'\r\nimport app from '../../data/firebase'\r\nimport FormControl from '@material-ui/core/FormControl'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: \"absolute\",\r\n    top: 110,\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nfunction SignInButton() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const body = (\r\n    <Modal\r\n      open={open}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"sign-in-modal\"\r\n      aria-describedby=\"sign-in-modal\"\r\n    >\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Logowanie\r\n          </Typography>\r\n          <StyledCloseButton onClick={handleClose}>\r\n            <CloseIcon />\r\n          </StyledCloseButton>\r\n          <FormControl fullWidth required>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              id=\"email\"\r\n              label=\"Adres email\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              name=\"password\"\r\n              label=\"Hasło\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Zapamiętaj\"\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Zaloguj się\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Link to=\"/\" variant=\"body2\">\r\n                  Zapomniałeś hasła?\r\n                </Link>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link to=\"/\" variant=\"body2\">\r\n                  {\"Nie masz konta? Założysz je tutaj!\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </FormControl>\r\n        </div>\r\n      </Container>\r\n    </Modal>\r\n  );\r\n  return (\r\n    <>\r\n      <Button onClick={handleOpen} variant=\"outlined\">\r\n        Zaloguj się\r\n      </Button>\r\n      {body}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SignInButton;\r\n","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\shared\\StyledLink.js",["124"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledLink = styled(Link)`\r\n  text-decoration: none;\r\n  &:focus,\r\n  &:hover,\r\n  &:visited,\r\n  &:link,\r\n  &:active {\r\n    text-decoration: none;\r\n  }\r\n`;\r\n\r\nexport default (props) => <StyledLink {...props} />;\r\n","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\data\\firebase.js",[],"C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\data\\Auth.js",["125"],"import { useState, useEffect, createContext } from 'react'\r\nimport app from './firebase';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [currentUser, setCurrentUser] = useState(null)\r\n\r\n    useEffect(() => {\r\n        app.auth().onAuthStateChanged(setCurrentUser);\r\n    }, [])\r\n    return null\r\n}","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\theme\\theme.js",[],"C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\Home\\index.js",[],"C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\FlowerBedForm\\index.js",[],"C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\FlowerBeds\\index.js",[],"C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\SelectVegetables\\index.js",[],"C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\Home\\Home.js",[],"C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\FlowerBedForm\\FlowerBedForm.js",[],"C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\FlowerBeds\\FlowerBeds.js",[],"C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\SelectVegetables\\Vegetables.js",[],"C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\shared\\StyledModalCloseButton.js",["126"],"import styled from 'styled-components'\r\nimport IconButton from '@material-ui/core/IconButton'\r\n\r\nconst StyledCloseButton = styled(IconButton)`\r\n    position:absolute;\r\n    right:0;\r\n    top:0;\r\n`\r\n\r\nexport default (props) => <StyledCloseButton {...props} />;","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\shared\\ReturnButton.js",[],"C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\FlowerBeds\\CreateFlowerBed.js",[],"C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\SelectVegetables\\VegetableSelector.js",["127","128"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport GridList from \"@material-ui/core/GridList\";\r\nimport GridListTile from \"@material-ui/core/GridListTile\";\r\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport SelectedVegetables from \"./SelectedVegetables\";\r\nimport RecommendedVegetables from './RecommendedVegetables'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { firestore } from \"../../data/firebase\";\r\nimport styled from 'styled-components'\r\n\r\nconst StyledContainer = styled.div`\r\n    display: flex;\r\n    justify-content: space-around;\r\n    overflow: hidden;\r\n`\r\nconst useStyles = makeStyles(() => ({\r\n  gridList: {\r\n    width: 1000,\r\n    height: 600,\r\n  },\r\n  icon: {\r\n    color: \"rgba(255, 255, 255, 0.54)\",\r\n  },\r\n}));\r\n\r\nexport default function VegetableSelector() {\r\n  const classes = useStyles();\r\n  const [items, setItems] = useState([]);\r\n  const [selectedItems, setSelectedItems] = useState([]);\r\n  const [recommendedItems, setRecommendedItems] = useState([]);\r\n\r\n  useEffect(\r\n    function loadData() {\r\n      const fetchData = async () => {\r\n        const vegetables = await firestore.collection(\"Vegetables\").get();\r\n        const tmp = [];\r\n        vegetables.docs.map(async (doc) => {\r\n          tmp.push({ id: doc.id, ...doc.data() });\r\n        });\r\n        tmp.sort((a, b) => a.name > b.name ? 1 : -1)\r\n        setItems(tmp);\r\n      };\r\n      fetchData();\r\n    }, []);\r\n\r\n\r\n  useEffect(\r\n    function updateRecommendation() {\r\n      var matchedItems = [];\r\n      selectedItems.map(item => item.likesArray.map(it => {\r\n        for (let i = 0; i < items.length; i++) {\r\n          if (it === items[i].id) {\r\n            matchedItems.push(items[i]);\r\n          }\r\n        }\r\n      }))\r\n      setRecommendedItems([...matchedItems])\r\n    }, [selectedItems]);\r\n\r\n  function findItem(item) {\r\n    return selectedItems.some(el => el.id === item.id)\r\n  }\r\n\r\n  function handleClick(item) {\r\n    const founded = findItem(item);\r\n    if (!founded) {\r\n      setSelectedItems((selectedItems) => [...selectedItems, item]);\r\n    }\r\n  }\r\n\r\n  function deleteSelectedItem(id) {\r\n    setSelectedItems((selectedData) =>\r\n      selectedData.filter((item) => item.id !== id)\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h4\" align=\"center\">\r\n        Wybierz warzywa do zasadzenia\r\n        </Typography>\r\n      <StyledContainer>\r\n        <GridList className={classes.gridList} cellHeight={400}>\r\n          {items.map((item) => (\r\n            <GridListTile key={item.image} cols={0.4} rows={0.5}>\r\n              <img src={item.image} alt={item.id} />\r\n              <GridListTileBar\r\n                title={item.name}\r\n                actionIcon={\r\n                  <IconButton\r\n                    className={classes.icon}\r\n                    onClick={() => handleClick(item)}\r\n                  >\r\n                    <AddIcon />\r\n                  </IconButton>\r\n                }\r\n              />\r\n            </GridListTile>\r\n          ))}\r\n        </GridList>\r\n        {selectedItems && (\r\n          <SelectedVegetables\r\n            selectedItems={selectedItems}\r\n            deleteSelectedItem={deleteSelectedItem}\r\n          />\r\n        )}\r\n        <RecommendedVegetables recommendedItems={recommendedItems} addItem={handleClick} />\r\n      </StyledContainer>\r\n    </>\r\n  );\r\n}","C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\FlowerBeds\\ExistingFlowerBeds.js",[],"C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\SelectVegetables\\SelectedVegetables.js",[],"C:\\Users\\48604\\Documents\\GitHub\\vegarden-v2\\src\\pages\\SelectVegetables\\RecommendedVegetables.js",[],{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","severity":1,"message":"134","line":9,"column":10,"nodeType":"135","messageId":"136","endLine":9,"endColumn":22},{"ruleId":"133","severity":1,"message":"137","line":42,"column":9,"nodeType":"135","messageId":"136","endLine":42,"endColumn":21},{"ruleId":"138","severity":1,"message":"139","line":42,"column":24,"nodeType":"135","endLine":42,"endColumn":35},{"ruleId":"133","severity":1,"message":"140","line":15,"column":8,"nodeType":"135","messageId":"136","endLine":15,"endColumn":11},{"ruleId":"141","severity":1,"message":"142","line":16,"column":1,"nodeType":"143","endLine":16,"endColumn":53},{"ruleId":"133","severity":1,"message":"144","line":7,"column":12,"nodeType":"135","messageId":"136","endLine":7,"endColumn":23},{"ruleId":"141","severity":1,"message":"142","line":10,"column":1,"nodeType":"143","endLine":10,"endColumn":60},{"ruleId":"145","severity":1,"message":"146","line":53,"column":56,"nodeType":"147","messageId":"148","endLine":53,"endColumn":58},{"ruleId":"138","severity":1,"message":"149","line":61,"column":8,"nodeType":"150","endLine":61,"endColumn":23,"suggestions":"151"},"no-native-reassign",["152"],"no-negated-in-lhs",["153"],"no-unused-vars","'AuthProvider' is defined but never used.","Identifier","unusedVar","'handleSignUp' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","'app' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'currentUser' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'items'. Either include it or remove the dependency array.","ArrayExpression",["154"],"no-global-assign","no-unsafe-negation",{"desc":"155","fix":"156"},"Update the dependencies array to be: [items, selectedItems]",{"range":"157","text":"158"},[1961,1976],"[items, selectedItems]"]